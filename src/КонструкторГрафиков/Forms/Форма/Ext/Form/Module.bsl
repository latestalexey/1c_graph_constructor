////////////////////////////////////////////////////////////////////////////////
// Модуль формы внешней обработки просмотра графиков
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДиаграммаПриАктивизации(Элемент)
	
	АнализВыделенногоПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ДатаНачала = Период.ДатаНачала;
	ДатаОкончания = Период.ДатаОкончания;
	
	ОбновитьНаСервере(ДатаНачала, ДатаОкончания);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВыбранныеСвойства

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	РезюмеПоНастройкам = АнализНастроек();
	Если РезюмеПоНастройкам.ЕстьЧтоПоказывать Тогда
		ОбновитьНаСервере(ДатаНачала, ДатаОкончания);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезюмеПоНастройкам.ТекстСообщения, , РезюмеПоНастройкам.Поле);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиДатуНачала(Команда)
	
	Период.ДатаНачала = ВыделеннаяДатаНачала;
	ДатаНачала = ВыделеннаяДатаНачала;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиДатуОкончания(Команда)
	
	Период.ДатаОкончания = ВыделеннаяДатаОкончания;
	ДатаОкончания = ВыделеннаяДатаОкончания;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьНаСервере(ДатаНачалаГрафика, ДатаОкончанияГрафика)
	
	СоответствияРазделителей = Новый Соответствие;
	
	Диаграмма.Очистить();
	
	ДанныеДляГрафика = Новый ТаблицаЗначений;
	ДанныеДляГрафика.Колонки.Добавить("ДатаСобытия",        Новый ОписаниеТипов("Дата", , , , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ДанныеДляГрафика.Колонки.Добавить("Значение",           Новый ОписаниеТипов("Число"));
	ДанныеДляГрафика.Колонки.Добавить("ИдентификаторСерии", Новый ОписаниеТипов("Строка", , , , , Новый КвалификаторыСтроки(50)));
	              
	Свойства = Новый Массив;
	Для Каждого СтрокаЗамера Из ВыбранныеСвойства.ПолучитьЭлементы() Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаЗамера.Замер) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не СтрокаЗамера.Показывать Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаСвойства Из СтрокаЗамера.ПолучитьЭлементы() Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаСвойства.Свойство) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не СтрокаСвойства.Показывать Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаСвойства.ФункцияАгрегации) Тогда
				СтрокаАгрегации = СтрокаСвойства.ФункцияАгрегации;
			Иначе
				СтрокаАгрегации = "Сумма(";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаСвойства.Множитель) Тогда
				Множитель = СтрокаСвойства.Множитель;
			Иначе
				Множитель = 1;
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Замер",                     СтрокаЗамера.Замер);
			Запрос.УстановитьПараметр("ДатаНачала",                ДатаНачалаГрафика);
			Запрос.УстановитьПараметр("ДатаОкончания",             ДатаОкончанияГрафика);
			Запрос.УстановитьПараметр("Свойство",                  СтрокаСвойства.Свойство);
			Запрос.УстановитьПараметр("СвойствоРазделитель",       СтрокаСвойства.Разделитель);
			Запрос.УстановитьПараметр("Множитель",                 Множитель);
			Запрос.УстановитьПараметр("Нормализация",              НормализацияДоМинуты);
			Запрос.УстановитьПараметр("НеВключатьНулевыеЗначения", НеВключатьНулевыеЗначения);
			
			СтрокаОписания = СтрШаблон("%1(%2)", СтрокаСвойства.Свойство, СтрокаЗамера.Замер);
			
			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			               |	ТСК.Ссылка КАК СобытиеЗамера,
			               |	ТСК.Ссылка.ДатаСобытия КАК ДатаСобытия,
			               |	ТСК.ЗначениеЧисло КАК ЗначениеЧисло,
			               |	ТСК.Свойство КАК Свойство
			               |ПОМЕСТИТЬ ВсеЗаполненныеЗамерыЗаПериод
			               |ИЗ
			               |	Справочник.СобытияЗамера.КлючевыеСвойства КАК ТСК
			               |ГДЕ
			               |	ТСК.Ссылка.Владелец = &Замер
			               |	И ТСК.Ссылка.НомерСтрокиФайла > 0
			               |	И ТСК.Ссылка.ДатаСобытия МЕЖДУ &ДатаНачала И &ДатаОкончания
			               |	И ТСК.Свойство = &Свойство
			               |	И ТСК.ЗначениеЧисло > 0
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	СобытияЗамераКлючевыеСвойства.Ссылка КАК СобытиеЗамера,
			               |	ВЫРАЗИТЬ(СобытияЗамераКлючевыеСвойства.Значение КАК СТРОКА(40)) КАК ЗначениеРазделителя
			               |ПОМЕСТИТЬ РазделителиЗамеров
			               |ИЗ
			               |	Справочник.СобытияЗамера.КлючевыеСвойства КАК СобытияЗамераКлючевыеСвойства
			               |ГДЕ
			               |	СобытияЗамераКлючевыеСвойства.Ссылка В
			               |			(ВЫБРАТЬ
			               |				ВсеЗаполненныеЗамерыЗаПериод.СобытиеЗамера КАК СобытиеЗамера
			               |			ИЗ
			               |				ВсеЗаполненныеЗамерыЗаПериод КАК ВсеЗаполненныеЗамерыЗаПериод)
			               |	И СобытияЗамераКлючевыеСвойства.Свойство = &СвойствоРазделитель
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ВсеЗаполненныеЗамерыЗаПериод.ДатаСобытия КАК ДатаСобытия,
			               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВсеЗаполненныеЗамерыЗаПериод.ЗначениеЧисло * &Множитель) КАК Значение,
			               |	ВсеЗаполненныеЗамерыЗаПериод.Свойство КАК Свойство,
			               |	РазделителиЗамеров.ЗначениеРазделителя КАК ЗначениеРазделителя
			               |ПОМЕСТИТЬ ПередГруппировкойДляНормализации
			               |ИЗ
			               |	ВсеЗаполненныеЗамерыЗаПериод КАК ВсеЗаполненныеЗамерыЗаПериод
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РазделителиЗамеров КАК РазделителиЗамеров
			               |		ПО ВсеЗаполненныеЗамерыЗаПериод.СобытиеЗамера = РазделителиЗамеров.СобытиеЗамера
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ВсеЗаполненныеЗамерыЗаПериод.ДатаСобытия,
			               |	ВсеЗаполненныеЗамерыЗаПериод.Свойство,
			               |	РазделителиЗамеров.ЗначениеРазделителя
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ВЫБОР
			               |		КОГДА &Нормализация
			               |			ТОГДА НАЧАЛОПЕРИОДА(ПередГруппировкойДляНормализации.ДатаСобытия, МИНУТА)
			               |		ИНАЧЕ ПередГруппировкойДляНормализации.ДатаСобытия
			               |	КОНЕЦ КАК ДатаСобытия,
			               |	СУММА(ПередГруппировкойДляНормализации.Значение) / КОЛИЧЕСТВО(ПередГруппировкойДляНормализации.Значение) КАК Значение,
			               |	ПередГруппировкойДляНормализации.Свойство КАК Свойство,
			               |	ПередГруппировкойДляНормализации.ЗначениеРазделителя КАК ЗначениеРазделителя
			               |ИЗ
			               |	ПередГруппировкойДляНормализации КАК ПередГруппировкойДляНормализации
			               |ГДЕ
			               |	ВЫБОР
			               |			КОГДА &НеВключатьНулевыеЗначения
			               |				ТОГДА ПередГруппировкойДляНормализации.Значение <> 0
			               |			ИНАЧЕ ИСТИНА
			               |		КОНЕЦ
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ПередГруппировкойДляНормализации.Свойство,
			               |	ПередГруппировкойДляНормализации.ЗначениеРазделителя,
			               |	ВЫБОР
			               |		КОГДА &Нормализация
			               |			ТОГДА НАЧАЛОПЕРИОДА(ПередГруппировкойДляНормализации.ДатаСобытия, МИНУТА)
			               |		ИНАЧЕ ПередГруппировкойДляНормализации.ДатаСобытия
			               |	КОНЕЦ";	
	
					Запрос.Текст = СтрЗаменить(Запрос.Текст, "КОЛИЧЕСТВО(РАЗЛИЧНЫЕ", СтрокаАгрегации);
					
					Выборка = Запрос.Выполнить().Выбрать();
					Пока Выборка.Следующий() Цикл
						
						НоваяСтрока = ДанныеДляГрафика.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
						Если ЗначениеЗаполнено(СтрокаСвойства.РасшифровкаРазделителя) Тогда
							ЗначениеРазделителя = ОписаниеРазделителя(Выборка.ЗначениеРазделителя, СоответствияРазделителей, СтрокаСвойства);
						Иначе
							ЗначениеРазделителя = Выборка.ЗначениеРазделителя;
						КонецЕсли;
						НоваяСтрока.ИдентификаторСерии = СтрШаблон("%1_%2", ЗначениеРазделителя, СтрокаОписания);
												
					КонецЦикла;
					
		КонецЦикла;
		
	КонецЦикла;
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДанныеДляГрафика", ДанныеДляГрафика);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеДляГрафика.ДатаСобытия КАК ДатаСобытия,
	               |	ДанныеДляГрафика.Значение КАК Значение,
	               |	ДанныеДляГрафика.ИдентификаторСерии КАК ИдентификаторСерии
	               |ПОМЕСТИТЬ ДанныеДляГрафика
	               |ИЗ
	               |	&ДанныеДляГрафика КАК ДанныеДляГрафика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеДляГрафика.ДатаСобытия КАК ДатаСобытия,
	               |	ДанныеДляГрафика.Значение КАК Значение,
	               |	ДанныеДляГрафика.ИдентификаторСерии КАК ИдентификаторСерии
	               |ИЗ
	               |	ДанныеДляГрафика КАК ДанныеДляГрафика
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаСобытия
	               |ИТОГИ ПО
	               |	ДатаСобытия";
	
	ВыборкаДат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока ВыборкаДат.Следующий() Цикл
		
		ТочкаДиаграммы = Диаграмма.УстановитьТочку(ВыборкаДат.ДатаСобытия);
		
		Выборка = ВыборкаДат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		Пока Выборка.Следующий() Цикл
			Если НеВключатьНулевыеЗначения И (Выборка.Значение = 0 ИЛИ Выборка.Значение = Неопределено) Тогда
				Продолжить;
			КонецЕсли;
			СерияДиаграммы = Диаграмма.УстановитьСерию(Выборка.ИдентификаторСерии);
			Диаграмма.УстановитьЗначение(ТочкаДиаграммы, СерияДиаграммы, Выборка.Значение);
		КонецЦикла;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура АнализВыделенногоПериода()
	
	ВыделенныйПериод = ПериодВыделенныхЭлементов(Элементы.Диаграмма.ПолучитьВыделенныеЭлементы());
	Если ВыделенныйПериод = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ОбновитьНаСервере(ВыделенныйПериод.ДатаНачала, ВыделенныйПериод.ДатаОкончания);

КонецПроцедуры

&НаСервере
Функция ПериодВыделенныхЭлементов(ВыделенныеЭлементы)
	
	ВыделенныйПериод = Новый Структура("ДатаНачала,ДатаОкончания", Дата(1,1,1), Дата(1,1,1));
	ТаблицаДат = Новый ТаблицаЗначений();
	ТаблицаДат.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	
	Для Каждого ВыделенныйЭлемент Из ВыделенныеЭлементы Цикл
		Дата = Неопределено;
		Если ТипЗнч(ВыделенныйЭлемент) = Тип("ТочкаДиаграммы") Тогда
			Дата = ВыделенныйЭлемент.Значение;
		КонецЕсли;
		Если ТипЗнч(ВыделенныйЭлемент) = Тип("ЗначениеДиаграммы") Тогда
			Дата = ВыделенныйЭлемент.Точка.Значение;
		КонецЕсли;
		
		Если Дата <> Неопределено Тогда
			НоваяСтрока = ТаблицаДат.Добавить();
			НоваяСтрока.Дата = Дата;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТаблицаДат) Тогда
		ТаблицаДат.Сортировать("Дата Возр");
		ВыделенныйПериод.ДатаНачала = ТаблицаДат[0].Дата;
		ТаблицаДат.Сортировать("Дата Убыв");
		ВыделенныйПериод.ДатаОкончания = ТаблицаДат[0].Дата;
	КонецЕсли;
		
	Если (ВыделенныйПериод.ДатаОкончания - ВыделенныйПериод.ДатаНачала) > 60 Тогда
		ВыделеннаяДатаНачала    = ВыделенныйПериод.ДатаНачала;
		ВыделеннаяДатаОкончания = ВыделенныйПериод.ДатаОкончания;
		Возврат ВыделенныйПериод;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
		
КонецФункции

&НаСервере
Функция ОписаниеРазделителя(ЗначениеРазделителя, СоответствияРазделителей, СтрокаСвойства)
	
	Описание = СоответствияРазделителей.Получить(ЗначениеРазделителя);
	
	Если Описание <> Неопределено Тогда
		Возврат Описание;
	КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗначениеРазделителя", ЗначениеРазделителя);
	Запрос.УстановитьПараметр("ТипСобытия", СтрокаСвойства.РасшифровкаРазделителя);
	//Запрос.УстановитьПараметр("СвойствоВзять", СтрокаСвойства.СвойствоВзять);
	Запрос.УстановитьПараметр("СвойствоПодставить", СтрокаСвойства.СвойствоПодставить);
	
	Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
	                |	СобытияЗамераКлючевыеСвойства.Ссылка КАК Ссылка
	                |ПОМЕСТИТЬ ПодходящаяЗапись
	                |ИЗ
	                |	Справочник.СобытияЗамера.КлючевыеСвойства КАК СобытияЗамераКлючевыеСвойства
	                |ГДЕ
	                |	СобытияЗамераКлючевыеСвойства.Ссылка.ТипСобытия = &ТипСобытия
	                |	И ВЫРАЗИТЬ(СобытияЗамераКлючевыеСвойства.Значение КАК Строка(40)) = &ЗначениеРазделителя
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	СобытияЗамераКлючевыеСвойства.Значение КАК Значение,
	                |	ПодходящаяЗапись.Ссылка КАК Ссылка
	                |ИЗ
	                |	ПодходящаяЗапись КАК ПодходящаяЗапись
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СобытияЗамера.КлючевыеСвойства КАК СобытияЗамераКлючевыеСвойства
	                |		ПО ПодходящаяЗапись.Ссылка = СобытияЗамераКлючевыеСвойства.Ссылка
	                |ГДЕ
	                |	СобытияЗамераКлючевыеСвойства.Свойство = &СвойствоПодставить";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СоответствияРазделителей.Вставить(ЗначениеРазделителя, Выборка.Значение);
		Возврат Выборка.Значение;
		
	Иначе
		СоответствияРазделителей.Вставить(ЗначениеРазделителя, ЗначениеРазделителя);
		Возврат ЗначениеРазделителя;
	КонецЕсли;	
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция АнализНастроек()
	
	РезюмеПоНастройкам = Новый Структура;
	
	ЕстьЧтоПоказывать = Ложь;
	
	ЗаполненаОсновнаяСтрока = Ложь;
	ВыделенаОсновнаяСтрока = Ложь;
	ЗаполненаПодчиненнаяСтрока = Ложь;
	ВыделенаПодчиненнаяСтрока = Ложь;
		
	Для Каждого СтрокаЗамера Из ВыбранныеСвойства.ПолучитьЭлементы() Цикл
		
		ЗаполненаОсновнаяСтрока = ЗначениеЗаполнено(СтрокаЗамера.Замер);
		ВыделенаОсновнаяСтрока = СтрокаЗамера.Показывать;
		
		Для Каждого СтрокаСвойства Из СтрокаЗамера.ПолучитьЭлементы() Цикл
			
			ЗаполненаПодчиненнаяСтрока = ЗначениеЗаполнено(СтрокаСвойства.Свойство);
			ВыделенаПодчиненнаяСтрока = СтрокаСвойства.Показывать;
			
			Если ЗаполненаОсновнаяСтрока И ЗаполненаПодчиненнаяСтрока
				И ВыделенаОсновнаяСтрока И ВыделенаПодчиненнаяСтрока Тогда
				ЕстьЧтоПоказывать = Истина;
			КонецЕсли;
		
		КонецЦикла;
		
		Если ЗаполненаОсновнаяСтрока И ЗаполненаПодчиненнаяСтрока
			И ВыделенаОсновнаяСтрока И ВыделенаПодчиненнаяСтрока Тогда
			ЕстьЧтоПоказывать = Истина;
		КонецЕсли;
		
			
	КонецЦикла;
	
	Если Не ЕстьЧтоПоказывать Тогда
		
		РезюмеПоНастройкам.Вставить("ТекстСообщения", "Проверьте вложенность настроек и отметку у всех нужных настроек");
		РезюмеПоНастройкам.Вставить("Поле", "ВыбранныеСвойства");
		
	КонецЕсли;
	
	РезюмеПоНастройкам.Вставить("ЕстьЧтоПоказывать", ЕстьЧтоПоказывать);
	
	Возврат РезюмеПоНастройкам;
	
КонецФункции

#КонецОбласти
